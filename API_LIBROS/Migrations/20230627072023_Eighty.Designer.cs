// <auto-generated />
using API_LIBROS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_LIBROS.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230627072023_Eighty")]
    partial class Eighty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API_LIBROS.Models.Autores", b =>
                {
                    b.Property<int>("ID_AUTOR")
                        .HasColumnType("int");

                    b.Property<string>("AUTOR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_AUTOR");

                    b.ToTable("autores");

                    b.HasData(
                        new
                        {
                            ID_AUTOR = 1,
                            AUTOR = "Juan Luis"
                        },
                        new
                        {
                            ID_AUTOR = 2,
                            AUTOR = "Miguel Uribina"
                        },
                        new
                        {
                            ID_AUTOR = 3,
                            AUTOR = "Ale"
                        },
                        new
                        {
                            ID_AUTOR = 4,
                            AUTOR = "Boba"
                        },
                        new
                        {
                            ID_AUTOR = 5,
                            AUTOR = "Lloron"
                        },
                        new
                        {
                            ID_AUTOR = 6,
                            AUTOR = "Hambre"
                        },
                        new
                        {
                            ID_AUTOR = 7,
                            AUTOR = "Dio mio"
                        },
                        new
                        {
                            ID_AUTOR = 8,
                            AUTOR = "Ojala Funcione"
                        });
                });

            modelBuilder.Entity("API_LIBROS.Models.Libros", b =>
                {
                    b.Property<int>("ID_AUTOR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_AUTOR"));

                    b.Property<string>("CATEGORIA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EXISTENCIA")
                        .HasColumnType("int");

                    b.Property<double>("PRECIO")
                        .HasColumnType("float");

                    b.Property<string>("TITULO")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_AUTOR");

                    b.ToTable("libros");

                    b.HasData(
                        new
                        {
                            ID_AUTOR = 1,
                            CATEGORIA = "Filosofia",
                            EXISTENCIA = 9,
                            PRECIO = 700.0,
                            TITULO = "Camino Hacia el Dorado"
                        },
                        new
                        {
                            ID_AUTOR = 2,
                            CATEGORIA = "Historia",
                            EXISTENCIA = 4,
                            PRECIO = 800.0,
                            TITULO = "EL Alquimista"
                        },
                        new
                        {
                            ID_AUTOR = 3,
                            CATEGORIA = "Aventura",
                            EXISTENCIA = 10,
                            PRECIO = 700.0,
                            TITULO = "Viaje al Fin del Mundo"
                        },
                        new
                        {
                            ID_AUTOR = 4,
                            CATEGORIA = "Slice of Life",
                            EXISTENCIA = 1,
                            PRECIO = 700.0,
                            TITULO = "Superman:Legacy"
                        },
                        new
                        {
                            ID_AUTOR = 5,
                            CATEGORIA = "Fantasia Oscura",
                            EXISTENCIA = 9,
                            PRECIO = 10000.0,
                            TITULO = "Coraline"
                        },
                        new
                        {
                            ID_AUTOR = 6,
                            CATEGORIA = "Slice of Life",
                            EXISTENCIA = 1,
                            PRECIO = 700.0,
                            TITULO = "Superman:Legacy"
                        },
                        new
                        {
                            ID_AUTOR = 7,
                            CATEGORIA = "Action",
                            EXISTENCIA = 20,
                            PRECIO = 700.0,
                            TITULO = "Green Lantern:Legacy"
                        },
                        new
                        {
                            ID_AUTOR = 8,
                            CATEGORIA = "Action",
                            EXISTENCIA = 5,
                            PRECIO = 700.0,
                            TITULO = "Flash-Point"
                        });
                });

            modelBuilder.Entity("API_LIBROS.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "admin",
                            Password = "123.",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "usuario",
                            Password = "123.",
                            Role = "Public"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
